apply plugin: 'idea'
apply plugin: 'java'
apply plugin: 'maven'
apply plugin: 'signing'

group = 'com.github.pukkaone'

sourceCompatibility = 1.7

repositories {
    mavenLocal()
    mavenCentral()
}

dependencies {
    compile "ch.qos.logback:logback-classic:1.2.3"
    compile "com.fasterxml.jackson.core:jackson-databind:2.8.5"
    compile "com.rabbitmq:amqp-client:3.6.3"
    testCompile 'junit:junit:4.12'
    testCompile 'org.mockito:mockito-core:2.2.29'
}

// Gets version from tag.
def readVersion() {
    def output = new ByteArrayOutputStream()
    def result = exec {
        commandLine = ['git', 'describe']
        standardOutput = output
        ignoreExitValue = true
    }
    def version = (result.getExitValue() == 0) ?
            output.toString().trim() : 'UNKNOWN'
    println "Version ${version}"
    return version
}

def assignVersion() {
    project.version = readVersion()
    project.ext.isReleaseVersion = project.version.find(/^[^-]+-\d+-g.+/) == null
}

afterEvaluate { project ->
    assignVersion()

    jar {
        manifest {
            attributes('Implementation-Version': project.version)
        }
    }
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from 'build/docs/javadoc'
}

task sourcesJar(type: Jar) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

artifacts {
    archives jar
    archives javadocJar
    archives sourcesJar
}

signing {
    required { isReleaseVersion && gradle.taskGraph.hasTask("uploadArchives") }
    sign configurations.archives
}

uploadArchives {
    if (project.hasProperty("sonatypeUsername") && project.hasProperty("sonatypePassword")) {
        repositories {
            mavenDeployer {
                beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }

                repository(url: 'https://oss.sonatype.org/service/local/staging/deploy/maven2/') {
                    authentication(userName: sonatypeUsername, password: sonatypePassword)
                }

                pom.project {
                    name 'logback-gelf'
                    packaging 'jar'
                    description 'Logback appender that sends GELF messages'
                    url 'https://github.com/pukkaone/logback-gelf'

                    scm {
                        connection 'scm:git:git@github.com:pukkaone/logback-gelf.git'
                        developerConnection 'scm:git:git@github.com:pukkaone/logback-gelf.git'
                        url 'https://github.com/pukkaone/logback-gelf'
                    }

                    licenses {
                        license {
                            name 'MIT License'
                            url 'http://opensource.org/licenses/MIT'
                            distribution 'repo'
                        }
                    }

                    developers {
                        developer {
                            id 'pukkaone'
                            name 'Chin Huang'
                        }
                    }
                }
            }
        }
    }
}
